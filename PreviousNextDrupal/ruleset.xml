<?xml version="1.0"?>
<ruleset name="PreviousNextDrupal">
    <arg name="extensions" value="php,module,inc,install,test,profile,theme"/>
    <arg name="ignore" value="*\.css,*\.md"/>

    <!-- PSR2.Methods -->
    <rule ref="PSR2.Methods.FunctionClosingBrace.SpacingBeforeClose"/>

    <!-- SlevomatCodingStandard.Classes -->
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="methodGroups" type="array">
                <element key="service init" value="create, createInstance"/>
                <element key="service after" value="getSubscribedEvents, __toString"/>
                <element key="entity before" value="baseFieldDefinitions"/>
                <element key="form before" value="getFormId, getEditableConfigNames"/>
                <element key="entity form before" value="form"/>
                <element key="entity form after" value="actions, save"/>
                <element key="forms" value="buildForm, validateForm, submitForm"/>
                <element key="phpunit before" value="setUp"/>
                <element key="phpunit after" value="tearDown"/>
            </property>

            <property name="groups" type="array">
                <!-- Top -->
                <element value="uses"/>
                <element value="enum cases"/>
                <element value="public constants"/>
                <element value="constants"/>
                <element value="properties"/>
                <element value="constructor"/>
                <element value="service init"/>
                <element value="service after"/>
                <element value="invoke method"/>
                <element value="entity form before"/>
                <element value="form before"/>
                <element value="entity before"/>
                <element value="phpunit before"/>
                <!-- Middle -->
                <element value="forms"/>
                <element value="public methods"/>
                <element value="methods"/>
                <element value="static methods"/>
                <element value="private methods"/>
                <!-- Bottom -->
                <element value="entity form after"/>
                <element value="phpunit after"/>
                <element value="service after"/>
            </property>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.RequireMultiLineMethodSignature">
        <properties>
            <property name="minLineLength" value="80"/>
            <property name="includedMethodPatterns" type="array">
                <element value="/__construct/" />
            </property>
        </properties>
    </rule>

    <!-- SlevomatCodingStandard.Commenting -->
    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment" />

    <!-- SlevomatCodingStandard.ControlStructures -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullSafeObjectOperator" />

    <!-- SlevomatCodingStandard.Functions -->
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInCall" />
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInDeclaration" />
    <rule ref="SlevomatCodingStandard.Functions.StaticClosure" />
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />

    <!-- SlevomatCodingStandard.Namespaces -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses" />
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions" />

    <!-- SlevomatCodingStandard.TypeHints -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="spacesCountAroundEqualsSign" type="int" value="0" />
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />

    <!-- Squiz.PHP -->
    <rule ref="Squiz.PHP.NonExecutableCode.Unreachable"><severity>0</severity></rule>

    <!-- Squiz.WhiteSpace -->
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter" />

    <!-- Drupal -->
    <rule ref="Drupal" />

    <!-- Undo the DeclareStrictTypesMissing ignore introduced by
         https://www.drupal.org/project/coder/issues/3407995
         This must be placed after the above ref="Drupal"
         -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing">
        <severity>5</severity>
    </rule>

    <!-- Drupal.Arrays -->
    <rule ref="Drupal.Arrays.Array.LongLineDeclaration"><severity>0</severity></rule>

    <!-- Drupal.Commenting -->
    <rule ref="Drupal.Commenting.ClassComment.Short"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.DocComment.MissingShort"><severity>0</severity></rule>
    <!-- Drupal Coder doesn't interact properly with strict types autofix.
         The @file doc is less of an issue nowadays as it's just for install
         and module files. Even less so when using Hux. -->
    <rule ref="Drupal.Commenting.FileComment.Missing"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.FunctionComment.IncorrectParamVarName"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.FunctionComment.InvalidReturn"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.TodoComment.TodoFormat"><severity>0</severity></rule>
    <!-- Do not require @var for properties since PHP has property typing -->
    <rule ref="Drupal.Commenting.VariableComment.Missing"><severity>0</severity></rule>

    <!-- Drupal.Functions -->
    <!-- This duplicates SlevomatCodingStandard.Functions.RequireTrailingCommaInDeclaration -->
    <rule ref="Drupal.Functions.MultiLineFunctionDeclaration.MissingTrailingComma"><severity>0</severity></rule>
</ruleset>
