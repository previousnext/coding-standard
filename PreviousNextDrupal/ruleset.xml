<?xml version="1.0"?>
<ruleset name="PreviousNextDrupal">
    <arg name="extensions" value="php,module,inc,install,test,profile,theme"/>
    <arg name="ignore" value="*\.css,*\.md"/>

    <!-- PSR2.Methods -->
    <rule ref="PSR2.Methods.FunctionClosingBrace.SpacingBeforeClose"/>

    <!-- SlevomatCodingStandard.Classes -->
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="groups" type="array">
                <element value="uses"/>
                <element value="enum cases"/>
                <element value="public constants"/>
                <element value="constants"/>
                <element value="properties"/>
                <element value="constructor"/>
                <!-- We cant order by public/protected methods yet as it would
                     make PHPUnit setup() drift to bottom. Wait until resolved:
                     https://github.com/slevomat/coding-standard/issues/1098 -->
                <element value="methods"/>
            </property>
        </properties>
    </rule>

    <!-- SlevomatCodingStandard.Functions -->
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInCall" />
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />

    <!-- SlevomatCodingStandard.Namespaces -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses" />
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions" />

    <!-- SlevomatCodingStandard.TypeHints -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="spacesCountAroundEqualsSign" type="int" value="1" />
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.UselessAnnotation"><severity>0</severity></rule>

    <!-- Squiz.PHP -->
    <rule ref="Squiz.PHP.NonExecutableCode.Unreachable"><severity>0</severity></rule>

    <!-- Squiz.WhiteSpace -->
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter" />

    <!-- Drupal -->
    <rule ref="Drupal" />

    <!-- Drupal.Arrays -->
    <rule ref="Drupal.Arrays.Array.LongLineDeclaration"><severity>0</severity></rule>

    <!-- Drupal.Commenting -->
    <rule ref="Drupal.Commenting.ClassComment.Short"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.DocComment.MissingShort"><severity>0</severity></rule>
    <!-- Drupal Coder doesn't interact properly with strict types autofix.
         The @file doc is less of an issue nowadays as it's just for install
         and module files. Even less so when using Hux. -->
    <rule ref="Drupal.Commenting.FileComment.Missing"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.FunctionComment.IncorrectParamVarName"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.FunctionComment.InvalidReturn"><severity>0</severity></rule>
    <rule ref="Drupal.Commenting.TodoComment.TodoFormat"><severity>0</severity></rule>
    <!-- Do not require @var for properties since PHP has property typing -->
    <rule ref="Drupal.Commenting.VariableComment.Missing"><severity>0</severity></rule>
</ruleset>
